/* =============================================================================
 * BuildInfo.h
 * -----------------------------------------------------------------------------
 * class utl::BuildInfo
 * Created on: 7 août 2012 at Irfu/Sedi/Lilas, CEA Saclay, F-91191, France
 * Author: fchateau
 * -----------------------------------------------------------------------------
 * © Commissariat a l'Energie Atomique et aux Energies Alternatives (CEA)
 * -----------------------------------------------------------------------------
 * Contributors: fchateau
 * -----------------------------------------------------------------------------
 * This software is part of the Utilities project.
 * -----------------------------------------------------------------------------
 * FREE SOFTWARE LICENCING
 * This software is governed by the CeCILL license under French law and abiding
 * by the rules of distribution of free software. You can use, modify and/or
 * redistribute the software under the terms of the CeCILL license as circulated
 * by CEA, CNRS and INRIA at the following URL: "http://www.cecill.info".
 * As a counterpart to the access to the source code and rights to copy, modify
 * and redistribute granted by the license, users are provided only with a
 * limited warranty and the software's author, the holder of the economic
 * rights, and the successive licensors have only limited liability. In this
 * respect, the user's attention is drawn to the risks associated with loading,
 * using, modifying and/or developing or reproducing the software by the user in
 * light of its specific status of free software, that may mean that it is
 * complicated to manipulate, and that also therefore means that it is reserved
 * for developers and experienced professionals having in-depth computer
 * knowledge. Users are therefore encouraged to load and test the software's
 * suitability as regards their requirements in conditions enabling the security
 * of their systems and/or data to be ensured and, more generally, to use and
 * operate it in the same conditions as regards security.
 * The fact that you are presently reading this means that you have had
 * knowledge of the CeCILL license and that you accept its terms.
 * -----------------------------------------------------------------------------
 * COMMERCIAL SOFTWARE LICENCING
 * You can obtain this software from CEA under other licencing terms for
 * commercial purposes. For this you will need to negotiate a specific contract
 * with a legal representative of CEA.
 * =============================================================================
 */

#ifndef utl_BuildInfo_h_INCLUDED
#define utl_BuildInfo_h_INCLUDED

#include <ostream>

#ifdef __GNUC__
#	define BUILDINFO_COMPILER "gcc " __VERSION__
#else
#	define BUILDINFO_COMPILER "unknown"
#endif
#ifdef SVN_REVISION
#	define BUILDINFO_REVISION SVN_REVISION
#else
#	define BUILDINFO_REVISION "unknown"
#endif

/**
 * For each project interested in adding build informations to its binaries,
 * this macro shall be called inside a dedicated C++ file (that will have to be
 * rebuilt at each build).
 * Before calling this macro, it is necessary to include first config.h (or whatever
 * is stated in AC_CONFIG_HEADERS, except if config header is not used) and
 * genbuildinfo.h (or whatever name given to the file generated by the build
 * system containing the source revision).
 * After, and only AFTER these files, shall the BuildInfo.h (this file) be included.
 */
#define BUILD_INFO \
	static utl::BuildInfo b(PACKAGE_NAME, __DATE__, __TIME__, BUILDINFO_COMPILER, BUILDINFO_REVISION);

namespace utl
{
/**
 * This class is designed to record informations about the build of a project.
 * One instance of this class shall be created for each module (library or
 * executable) we want to track this information, using the BUILD_INFO macro.
 * At each instanciation, it enlarges an application-wide linked list between the
 * statically allocated instances in order to be able to navigate among modules.
 * Modules are ordered in the list in their order of initialization, from the
 * first to the last.
 * Retrieving informations about revision requires a script to be run by the
 * build system.
 * For accurate date and time information, the build system shall be configured
 * to systematically rebuild the files using the BUILD_INFO macro.
 */
class BuildInfo
{
public:
	const char* const MODULE; ///< the module name
	const char* const DATE;   ///< the date of build
	const char* const TIME;   ///< the time of build
	const char* const COMPILER_VERSION; ///< a string describing the version of the compiler used for the build
	const char* const REVISION; ///< the revision number of the sources

	BuildInfo(const char* module, const char* date, const char* time, const char* compiler, const char* revision);
	~BuildInfo();

	static BuildInfo* first() { return first_; }
	BuildInfo* next() { return next_; }
	BuildInfo* prev() { return prev_; }

	static void printAll(std::ostream& s);
	friend std::ostream& operator<<(std::ostream& s, const BuildInfo& b);

private:
	static BuildInfo* first_; ///< the head of the doubled linked-list.
	BuildInfo* next_; ///< the next module.
	BuildInfo* prev_; ///< the previous module.
};

} /* namespace utl */

#endif /* utl_BuildInfo_h_INCLUDED */
