/**
 * @file AmcSlotManager.h
 * @date Feb 24, 2014
 * @author sizun
 * 
 * @note SVN tag: $Id$
 * @note Contributor(s): Patrick Sizun
 * @note 
 * @note This file is part of the GetBench software project.
 *
 * @copyright Â© Commissariat a l'Energie Atomique et aux Energies Alternatives (CEA)
 *
 * @par FREE SOFTWARE LICENCING
 * This software is governed by the CeCILL license under French law and abiding  * by the rules of distribution of free
 * software. You can use, modify and/or redistribute the software under the terms of the CeCILL license as circulated by
 * CEA, CNRS and INRIA at the following URL: "http://www.cecill.info". As a counterpart to the access to the source code
 * and rights to copy, modify and redistribute granted by the license, users are provided only with a limited warranty
 * and the software's author, the holder of the economic rights, and the successive licensors have only limited
 * liability. In this respect, the user's attention is drawn to the risks associated with loading, using, modifying
 * and/or developing or reproducing the software by the user in light of its specific status of free software, that may
 * mean that it is complicated to manipulate, and that also therefore means that it is reserved for developers and
 * experienced professionals having in-depth computer knowledge. Users are therefore encouraged to load and test the
 * software's suitability as regards their requirements in conditions enabling the security of their systems and/or data
 * to be ensured and, more generally, to use and operate it in the same conditions as regards security. The fact that
 * you are presently reading this means that you have had knowledge of the CeCILL license and that you accept its terms.
 *
 * @par COMMERCIAL SOFTWARE LICENCING
 * You can obtain this software from CEA under other licencing terms for commercial purposes. For this you will need to
 * negotiate a specific contract with a legal representative of CEA.
 *
 */

#ifndef get_rc_AmcSlotManager_h_INCLUDED
#define get_rc_AmcSlotManager_h_INCLUDED

#include "get/rc/CoBoNode.h"
#include "get/rc/MutantNode.h"
#include "get/mutant/AlignmentServer.h"
#include <boost/ptr_container/ptr_map.hpp>

namespace get
{
namespace rc
{
//_________________________________________________________________________________________________
/**
 * A class to determine which AMC slots are occupied by which CoBo boards.
 */
class AmcSlotManager
{
public:
	typedef std::pair< NodeId, size_t > SlotUID;///< Unique Identifier of an AMC slot (Mutant ID and slot index).
	typedef std::map< SlotUID, mutant::SlotAlignmentResult > AlignmentResults; ///< Alignment results mapped by Mutant ID and AMC slot index.
	AmcSlotManager(Node::ListList& nodeLists);
	void setCoBoMutantLink(const cobo::MutantLinkMode & mode, bool skipDisabledBoards);
	void findOccupiedSlots(std::map< std::string, SlotUID > & slots);
	void measureDelays();
	static SlotUID buildSlotUID(const NodeId & id, const size_t & slot);
	static std::string buildSlotUIDString(const NodeId & id, const size_t & slot);
protected:
	SlotUID findSlotOfCoBo(const std::string & coboId, const mutant::Clock & clock);
	void measureDelays(const mutant::Clock & clock, AlignmentResults & results);
	Node::ListList& nodeLists; ///< Reference to the CoBo boards and Mutant modules managers
};
//_________________________________________________________________________________________________
} /* namespace rc */
} /* namespace get */
#endif /* get_rc_AmcSlotManager_h_INCLUDED */
